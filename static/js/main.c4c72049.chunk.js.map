{"version":3,"sources":["components/ItemBox.js","components/DisplayCartItems.js","components/SelectCategory.js","components/ItemForm.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","dispatch","addToCart","item","type","payload","deleteItem","editItem","className","src","image","alt","name","price","onClick","editBtnHandlerClick","incrementCartItem","cartitem","decrementCartItem","qty","amount","SelectCategory","category","value","addItem","newItemObject","updateItem","itementrytitle","closeItemForm","categories","items","useState","id","setName","setPrice","setCategory","setImage","originalName","itemEntryTitle","htmlFor","onChange","e","target","map","trim","i","length","toLowerCase","alert","newItemObj","uuidv4","state","cart","totalAmount","updateCart","newcartarray","updateItems","newitemsarray","selectedCategory","setSelectedCategory","showItemForm","setShowItemForm","setItem","setItemEntryTitle","itemsArray","filter","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","computeCartTotal","newcart","cartTotal","forEach","newCartItem","cartItems","newCartArray","cartCopy","newCartTotal","cartItem","itemsCopy","splice","newitem","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSA2DeA,cAAQ,MAbI,SAAAC,GACvB,MAAO,CACHC,UAAW,SAACC,GAAD,OAAUF,EAAU,CAC3BG,KAAM,cACNC,QAASF,KAEbG,WAAY,SAACH,GAAD,OAAUF,EAAU,CAC5BG,KAAM,cACNC,QAASF,QAKNH,EAtDC,SAAC,GAA6C,IAA5CG,EAA2C,EAA3CA,KAAMI,EAAqC,EAArCA,SAAUD,EAA2B,EAA3BA,WAAYJ,EAAe,EAAfA,UA0B1C,OACI,sBAAKM,UAAU,MAAf,UACI,qBAAKC,IAAKN,EAAKO,MAAOC,IAAKR,EAAKS,OAChC,gCACI,wBAAQJ,UAAU,cAAlB,SAAiCL,EAAKS,OACtC,mBAAGJ,UAAU,cAAb,SAA2B,yCAAYL,EAAKU,WAC5C,8BAAG,wBAAQL,UAAU,kBAAkBM,QAAS,kBAAMZ,EAAUC,IAA7D,mBACC,wBAAQK,UAAU,oBAAoBM,QAAS,kBAXnC,SAACX,GACzBI,EAASJ,GAUwDY,CAAoBZ,IAAzE,kBACA,wBAAQK,UAAU,iBAAiBM,QAAS,kBAAMR,EAAWH,IAA7D,gCCRLH,G,MAAAA,YAAQ,MAZI,SAAAC,GACvB,MAAO,CACHe,kBAAmB,SAACC,GAAD,OAAchB,EAAU,CACvCG,KAAM,sBACNC,QAASY,KAEbC,kBAAmB,SAACD,GAAD,OAAchB,EAAU,CACvCG,KAAM,sBACNC,QAASY,QAINjB,EA5BU,SAAC,GAAsD,IAArDiB,EAAoD,EAApDA,SAAUD,EAA0C,EAA1CA,kBAAmBE,EAAuB,EAAvBA,kBAMpD,OACI,gCACI,qBAAKT,IAAKQ,EAASP,MAAOC,IAAKM,EAASL,OACxC,qBAAKJ,UAAU,kBAAf,SACI,mCAASS,EAASL,KAAlB,IAAwB,wBAAQE,QAAS,kBAAMI,EAAkBD,IAAzC,eAA+DA,EAASE,IAAI,wBAAQL,QAAS,kBAAME,EAAkBC,IAAzC,eAApG,WAA2KA,EAASJ,MAApL,UAAkMI,EAASG,mBCR5MC,EALQ,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACrB,OACI,wBAAQC,MAAOD,EAAf,SAA0BA,K,QCkJnBtB,cAAQ,MAdI,SAAAC,GACvB,MAAO,CACHuB,QAAS,SAACC,GAAD,OAAmBxB,EAAU,CAClCG,KAAM,WACNC,QAASoB,KAEbC,WAAY,SAACD,GAAD,OAAmBxB,EAAU,CACrCG,KAAM,cACNC,QAASoB,QAMNzB,EAhJE,SAAC,GAOO,IAPNG,EAOK,EAPLA,KACCwB,EAMI,EANJA,eACEC,EAKE,EALFA,cACAJ,EAIE,EAJFA,QACEE,EAGA,EAHAA,WACFG,EAEE,EAFFA,WACAC,EACE,EADFA,MAElB,EAAaC,mBAAS5B,EAAK6B,IAApBA,EAAP,oBACA,EAAwBD,mBAAS5B,EAAKS,MAAtC,mBAAOA,EAAP,KAAaqB,EAAb,KACA,EAA0BF,mBAAS5B,EAAKU,OAAxC,mBAAOA,EAAP,KAAcqB,EAAd,KACA,EAAgCH,mBAAS5B,EAAKmB,UAA9C,mBAAOA,EAAP,KAAiBa,EAAjB,KACA,EAA0BJ,mBAAS5B,EAAKO,OAAxC,mBAAOA,EAAP,KAAc0B,EAAd,KACA,EAAuBL,mBAAS5B,EAAKS,MAA9ByB,EAAP,oBACA,EAAyBN,mBAASJ,GAA3BW,EAAP,oBAsFA,OACI,sBAAK9B,UAAU,qBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,6BAAK8B,IACL,uBAAOC,QAAQ,GAAf,kBACA,uBAAOnC,KAAK,OAAOI,UAAU,eAAee,MAAOX,EAAM4B,SAzFzC,SAACC,GACzBR,EAAQQ,EAAEC,OAAOnB,UA0FT,uBAAOgB,QAAQ,GAAf,mBACA,uBAAOnC,KAAK,SAASI,UAAU,eAAee,MAAOV,EAAO2B,SAxF3C,SAACC,GAC1BP,EAASO,EAAEC,OAAOnB,UAyFV,uBAAOgB,QAAQ,GAAf,sBACA,yBAAQ3B,KAAK,GAAGoB,GAAG,GAAGxB,UAAU,eAAee,MAAOD,EAAUkB,SAvF5C,SAACC,GAC7BN,EAAYM,EAAEC,OAAOnB,QAsFb,UACI,wBAAQA,MAAM,GAAd,6BAEIM,EAAWc,KAAK,SAACrB,GAAD,OACZ,wBAAQC,MAAOD,EAASA,SAAxB,SAAmCA,EAASA,iBAKxD,uBAAOiB,QAAQ,GAAf,mBACA,uBAAOnC,KAAK,OAAOI,UAAU,eAAee,MAAOb,EAAO8B,SA7FzC,SAACC,GAC1BL,EAASK,EAAEC,OAAOnB,aA8Fd,sBAAKf,UAAU,aAAf,UACI,wBAAQM,QA5FQ,WACxB,GAAmB,KAAhBF,EAAKgC,OAAR,CAKI,GAAuB,iBAAnBN,GACC1B,IAASyB,EAEV,IAAI,IAAIQ,EAAE,EAAGA,EAAEf,EAAMgB,OAAQD,IACzB,GAAGf,EAAMe,GAAGjC,KAAKgC,OAAOG,gBAAkBnC,EAAKgC,OAAOG,cAElD,YADAC,MAAM,wBAMtB,GAAGnC,GAAS,EACRmC,MAAM,uBAGV,GAAuB,KAApB1B,EAASsB,OAIZ,GAAoB,KAAjBlC,EAAMkC,OAAT,CAKA,GAAsB,aAAnBN,EAA+B,CAC9B,IAAIW,EAAa,CACbjB,GAAIkB,cACJtC,KAAMA,EACNC,MAAOA,EACPS,SAAUA,EACVZ,MAAOA,GAEXc,EAAQyB,OAEP,CAmBDvB,EAlBiB,CACbM,GAAIA,EACJpB,KAAMA,EACNC,MAAOA,EACPS,SAAUA,EACVZ,MAAOA,IAefkB,SAnCIoB,MAAM,2BAJNA,MAAM,8BApBNA,MAAM,2BA0FoCxC,UAAU,kBAAhD,kBADJ,IACoF,wBAAQM,QA5BtE,WAC1Bc,KA2BgIpB,UAAU,iBAAlD,6BCAjFR,eAtBS,SAAAmD,GACpB,MAAO,CACHrB,MAAOqB,EAAMrB,MACbsB,KAAMD,EAAMC,KACZvB,WAAYsB,EAAMtB,WAClBwB,YAAaF,EAAME,gBAIA,SAAApD,GACvB,MAAO,CACHqD,WAAY,SAACC,GAAD,OAAkBtD,EAAU,CACpCG,KAAM,cACNC,QAASkD,KAEbC,YAAa,SAACC,GAAD,OAAmBxD,EAAU,CACtCG,KAAM,eACNC,QAASoD,QAKNzD,EAvHH,SAAC,GAGO,IAHN8B,EAGK,EAHLA,MAAOsB,EAGF,EAHEA,KAAMvB,EAGR,EAHQA,WAAYwB,EAGpB,EAHoBA,YAKnC,GAFe,EAFNC,WAEM,EADPE,YAGwCzB,mBAAS,KAAzD,mBAAO2B,EAAP,KAAyBC,EAAzB,KACA,EAAwC5B,oBAAS,GAAjD,mBAAO6B,EAAP,KAAqBC,EAArB,KACA,EAAwB9B,mBAAS,IAAjC,mBAAO5B,EAAP,KAAa2D,EAAb,KACA,EAA4C/B,mBAAS,IAArD,mBAAOO,EAAP,KAAuByB,EAAvB,KAsBMxD,EAAW,SAACJ,GACd2D,EAAQ3D,GACR4D,EAAkB,aAClBF,GAAgB,IAGhBG,EAAa,GASjB,OANIA,EADoB,KAArBN,EACW,YAAO5B,GAGJA,EAAMmC,QAAO,SAAA9D,GAAI,OAAIA,EAAKmB,WAAaoC,KAIpD,gCACI,iCACI,6CAEJ,iCACI,sBAAKlD,UAAU,qBAAf,sBACa,yBAAQe,MAAOmC,EAAkBlB,SA1CpB,SAACC,GACnCkB,EAAoBlB,EAAEC,OAAOnB,QAyCR,UACL,wBAAQA,MAAM,GAAd,iBAEIM,EAAWc,KAAI,SAACxC,EAAM+D,GAClB,OAAO,cAAC,EAAD,CAAgB5C,SAAUnB,EAAKmB,UAAe4C,SAIjE,wBAAQpD,QA9CW,WAC/BgD,EAAQ,CACJ9B,GAAI,GACJpB,KAAM,GACNC,MAAO,EACPS,SAAU,GACVZ,MAAO,KAEXqD,EAAkB,YAClBF,GAAgB,IAqCJ,6BAGAD,EAAe,cAAC,EAAD,CAAUzD,KAAMA,EAAM2B,MAAOA,EAAOD,WAAYA,EAAYF,eAAgBW,EAAgBV,cArCrG,WAClBiC,GAAgB,MAqCE,GAEV,qBAAKrD,UAAU,YAAf,SAEQwD,EAAWlB,OAAS,EAChBkB,EAAWrB,KAAK,SAACxC,EAAM+D,GACnB,OAAO,cAAC,EAAD,CAAS/D,KAAMA,EAENI,SAAUA,GADL2D,MAIvB,6DAGd,sBAAK1D,UAAU,iBAAf,UACI,8BACI,6BAAI,kDAAsB6C,SAG1BD,EAAKT,KAAK,SAAC1B,EAAUiD,GACjB,OAAO,cAAC,EAAD,CACHjD,SAAUA,GACLiD,YAKzB,iCCxFGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCLRQ,EAAe,CACjB9C,MAAQ,CACJ,CACIE,GAAIkB,cACJtC,KAAM,SACNC,MAAO,GACPS,SAAU,OACVZ,MAAO,yDAEX,CACIsB,GAAIkB,cACJtC,KAAM,QACNC,MAAO,IACPS,SAAU,OACVZ,MAAO,yDAEX,CACIsB,GAAIkB,cACJtC,KAAM,QACNC,MAAO,GACPS,SAAU,OACVZ,MAAO,yDAEX,CACIsB,GAAIkB,cACJtC,KAAM,SACNC,MAAO,GACPS,SAAU,SACVZ,MAAO,yDAEX,CACIsB,GAAIkB,cACJtC,KAAM,WACNC,MAAO,GACPS,SAAU,SACVZ,MAAO,yDAEX,CACIsB,GAAIkB,cACJtC,KAAM,UACNC,MAAO,GACPS,SAAU,SACVZ,MAAO,0DAGf0C,KAAM,GACNvB,WAAY,CACR,CACIP,SAAU,QAEd,CACIA,SAAU,UAEd,CACIA,SAAU,YAGlB+B,YAAa,GAmKFwB,EA/JC,WAAmC,IAAlC1B,EAAiC,uDAAzByB,EAAcE,EAAW,uCAExCC,EAAmB,SAACC,GACtB,IAAIC,EAAY,EAIhB,OAHAD,EAAQE,SAAQ,SAAA/E,GACZ8E,GAAW9E,EAAKiB,UAEb6D,GAGX,OAAOH,EAAO1E,MACV,IAAK,cACD,IAAI+E,EAAcL,EAAOzE,QAErB+E,EAAYjC,EAAMC,KAAKa,QAAO,SAAA9D,GAAI,OAAIA,EAAK6B,KAAOmD,EAAYnD,MAE9DqD,EAAe,GAEfC,EAAQ,YAAOnC,EAAMC,MAEtBgC,EAAUtC,OAAS,EAClBuC,EAAeC,EAAS3C,KAAI,SAAAxC,GACxB,OAAGA,EAAK6B,KAAOmD,EAAYnD,GAChB,2BACA7B,GADP,IAEIgB,IAAKhB,EAAKgB,IAAI,EACdC,QAASjB,EAAKgB,IAAI,GAAKhB,EAAKU,QAG7BV,MAIXgF,EAAYhE,IAAM,EAClBgE,EAAY/D,OAAS+D,EAAYtE,MAEjCwE,EAAY,sBAAOC,GAAP,CAAiBH,KAGjC,IAAII,EAAeR,EAAiBM,GAEpC,OAAO,2BACAlC,GADP,IAEIC,KAAK,YAAKiC,GACVhC,YAAakC,IAGrB,IAAK,sBACD,IAAIC,EAAWV,EAAOzE,QAElBgF,EAAY,YAAOlC,EAAMC,MAezBmC,EAAeR,EAbnBM,EAAeA,EAAa1C,KAAI,SAAAxC,GAC5B,OAAGA,EAAK6B,KAAOwD,EAASxD,GACb,2BACA7B,GADP,IAEIgB,IAAKqE,EAASrE,IAAM,EACpBC,QAASoE,EAASrE,IAAM,GAAKqE,EAAS3E,QAInCV,MAMf,OAAO,2BACAgD,GADP,IAEIC,KAAMiC,EACNhC,YAAakC,IAGrB,IAAK,sBACD,IAAIC,EAAWV,EAAOzE,QAElBgF,EAAY,YAAOlC,EAAMC,MAezBmC,EAAeR,EAbnBM,EAAeA,EAAa1C,KAAI,SAAAxC,GAC5B,OAAGA,EAAK6B,KAAOwD,EAASxD,IAAM7B,EAAKgB,IAAM,EAC9B,2BACAhB,GADP,IAEIgB,IAAKqE,EAASrE,IAAM,EACpBC,QAASoE,EAASrE,IAAM,GAAKqE,EAAS3E,QAInCV,MAMf,OAAO,2BACAgD,GADP,IAEIC,KAAMiC,EACNhC,YAAakC,IAGrB,IAAK,cAED,IAAIA,EAAeR,EAAiBD,EAAOzE,SAE3C,OAAO,2BACA8C,GADP,IAEIC,KAAM0B,EAAOzE,QACbgD,YAAakC,IAGrB,IAAK,WACD,IAAIE,EAAS,sBAAOtC,EAAMrB,OAAb,CAAoBgD,EAAOzE,UACxC,OAAO,2BACA8C,GADP,IAEIrB,MAAO2D,IAGf,IAAK,cAGD,IAFA,IAAItF,EAAO2E,EAAOzE,QACdoF,EAAS,YAAOtC,EAAMrB,OAClBe,EAAI,EAAGA,EAAI4C,EAAU3C,OAAQD,IAC7B4C,EAAU5C,GAAGb,KAAO7B,EAAK6B,IACzByD,EAAUC,OAAO7C,EAAG,GAG5B,OAAO,2BACAM,GADP,IAEIrB,MAAO2D,IAGf,IAAK,cACD,IAAIE,EAAUb,EAAOzE,QACjBoF,EAAS,YAAOtC,EAAMrB,OAiB1B,OAfA2D,EAAYA,EAAU9C,KAAI,SAAAxC,GACtB,OAAGA,EAAK6B,KAAO2D,EAAQ3D,GACZ,2BACA7B,GADP,IAEIS,KAAM+E,EAAQ/E,KACdC,MAAO8E,EAAQ9E,MACfS,SAAUqE,EAAQrE,SAClBZ,MAAOiF,EAAQjF,QAIZP,KAIR,2BACAgD,GADP,IAEIrB,MAAO2D,IAGf,QACI,OAAOtC,ICpNJyC,EAFDC,YAAYhB,GCK1BiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRK,SAASC,eAAe,SAM1B/B,M","file":"static/js/main.c4c72049.chunk.js","sourcesContent":["import './ItemBox.css';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {confirmAlert} from \"react-confirm-alert\";\nimport {connect} from \"react-redux\";\n\nconst ItemBox = ({item, editItem, deleteItem, addToCart}) => {\n\n    // const orderBtnClickHandler = (id) => {\n    //     addToCart(id);\n    // }\n\n    const deleteBtnHandlerClick = (id) => {\n        confirmAlert({\n            title: 'Delete Item',\n            message: 'Are you sure you want to delete this item?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => deleteItem(id)\n                },\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n\n    const editBtnHandlerClick = (item) => {\n        editItem(item);\n    }\n\n    return (\n        <div className=\"Box\">\n            <img src={item.image} alt={item.name}/>\n            <div>\n                <strong className=\"ItemDetails\">{item.name}</strong>\n                <p className=\"ItemDetails\"><small>Php {item.price}</small></p>\n                <p><button className=\"btn btn-primary\" onClick={() => addToCart(item)}>Order</button>\n                    <button className=\"btn btn-secondary\" onClick={() => editBtnHandlerClick(item)}>Edit</button>\n                    <button className=\"btn btn-danger\" onClick={() => deleteItem(item)}>Delete</button>\n                </p>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addToCart: (item) => dispatch ({\n            type: 'ADD_TO_CART',\n            payload: item,\n        }),\n        deleteItem: (item) => dispatch ({\n            type: 'DELETE_ITEM',\n            payload: item,\n        }),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(ItemBox);\n","import './DisplayCartItems.css';\nimport {connect} from \"react-redux\";\n\nconst DisplayCartItems = ({cartitem, incrementCartItem, decrementCartItem}) => {\n\n\n\n\n\n    return(\n        <div>\n            <img src={cartitem.image} alt={cartitem.name}/>\n            <div className=\"CartItemDetails\">\n                <strong>{cartitem.name} <button onClick={() => decrementCartItem(cartitem)}>-</button>{cartitem.qty}<button onClick={() => incrementCartItem(cartitem)}>+</button> x  Php {cartitem.price} = Php {cartitem.amount}</strong>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        incrementCartItem: (cartitem) => dispatch ({\n            type: 'INCREMENT_CART_ITEM',\n            payload: cartitem\n        }),\n        decrementCartItem: (cartitem) => dispatch ({\n            type: 'DECREMENT_CART_ITEM',\n            payload: cartitem\n        }),\n    }\n}\nexport default connect(null, mapDispatchToProps)(DisplayCartItems);","const SelectCategory = ({category}) => {\n    return(\n        <option value={category}>{category}</option>\n    )\n}\nexport default SelectCategory;","import { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport {v4 as uuidv4} from \"uuid\";\n\nconst ItemForm = ({item,\n                    itementrytitle,\n                      closeItemForm,\n                      addItem,\n                        updateItem,\n                      categories,\n                      items,\n                  }) => {\n    const [id] = useState(item.id);\n    const [name, setName] = useState(item.name);\n    const [price, setPrice] = useState(item.price);\n    const [category, setCategory] = useState(item.category);\n    const [image, setImage] = useState(item.image);\n    const [originalName] = useState(item.name);\n    const [itemEntryTitle] = useState(itementrytitle);\n\n    const nameOnChangeHandler = (e) => {\n        setName(e.target.value);\n    }\n\n    const priceOnChangeHandler = (e) => {\n        setPrice(e.target.value);\n    }\n\n    const categoryOnChangeHandler = (e) => {\n        setCategory(e.target.value);\n    }\n\n    const imageOnChangeHandler = (e) => {\n        setImage(e.target.value);\n    }\n\n    const saveBtnClickHandler = () => {\n        if(name.trim() === '') {\n            alert('Item Name is required.');\n            return\n        }\n        else {\n            if((itemEntryTitle === 'Add New Item') ||\n                (name !== originalName) ) {\n\n                for(let i=0; i<items.length; i++) {\n                    if(items[i].name.trim().toLowerCase() === name.trim().toLowerCase()) {\n                        alert('Item already exists.');\n                        return\n                    }\n                }\n            }\n        }\n        if(price <= 0) {\n            alert('Invalid price.');\n            return\n        }\n        if(category.trim() === '') {\n            alert('Category is required.');\n            return\n        }\n        if(image.trim() === '') {\n            alert('Image is required.');\n            return\n        }\n\n        if(itemEntryTitle === 'Add Item') {\n            let newItemObj = {\n                id: uuidv4(),\n                name: name,\n                price: price,\n                category: category,\n                image: image,\n            }\n            addItem(newItemObj);\n        }\n        else {\n            let newItemObj = {\n                id: id,\n                name: name,\n                price: price,\n                category: category,\n                image: image,\n            }\n\n            // let itemsCopy = items.map((item) => {\n            //     if(item.id === id) {\n            //         item.name = name;\n            //         item.price = price;\n            //         item.category = category;\n            //         item.image = image;\n            //     }\n            //     return item;\n            // })\n            // updateItems(itemsCopy);\n            updateItem(newItemObj);\n        }\n        closeItemForm();\n    }\n\n    const cancelBtnClickHandler = () => {\n        closeItemForm();\n    }\n\n    return(\n        <div className=\"category-container\">\n            <div className=\"form-group\">\n                <h2>{itemEntryTitle}</h2>\n                <label htmlFor=\"\">Name</label>\n                <input type=\"text\" className=\"form-control\" value={name} onChange={nameOnChangeHandler}/>\n\n                <label htmlFor=\"\">Price</label>\n                <input type=\"number\" className=\"form-control\" value={price} onChange={priceOnChangeHandler}/>\n\n                <label htmlFor=\"\">Category</label>\n                <select name=\"\" id=\"\" className=\"form-control\" value={category} onChange={categoryOnChangeHandler}>\n                    <option value=\"\">Select Category</option>\n                    {\n                        categories.map( (category) => (\n                            <option value={category.category}>{category.category}</option>\n                        ))\n                    }\n                </select>\n\n                <label htmlFor=\"\">Image</label>\n                <input type=\"text\" className=\"form-control\" value={image} onChange={imageOnChangeHandler}/>\n            </div>\n            <div className=\"form-group\">\n                <button onClick={saveBtnClickHandler} className=\"btn btn-primary\">Save</button> <button onClick={cancelBtnClickHandler} className=\"btn btn-danger\">Cancel</button>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addItem: (newItemObject) => dispatch ({\n            type: 'ADD_ITEM',\n            payload: newItemObject,\n        }),\n        updateItem: (newItemObject) => dispatch ({\n            type: 'UPDATE_ITEM',\n            payload: newItemObject,\n        }),\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(ItemForm);","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport ItemBox from \"./components/ItemBox\";\nimport DisplayCartItems from \"./components/DisplayCartItems\";\nimport SelectCategory from \"./components/SelectCategory\";\nimport ItemForm from './components/ItemForm';\nimport { useState } from \"react\";\nimport { connect } from 'react-redux';\n\nconst App = ({items, cart, categories, totalAmount,\n             updateCart,\n            updateItems,\n             }) => {\n\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [showItemForm, setShowItemForm] = useState(false);\n    const [item, setItem] = useState([]);\n    const [itemEntryTitle, setItemEntryTitle] = useState('');\n\n    const selectCategoryOnChangeHandler = (e) => {\n        setSelectedCategory(e.target.value);\n    }\n\n    const showItemFormOnClickHandler = () => {\n        setItem({\n            id: '',\n            name: '',\n            price: 0,\n            category: '',\n            image: '',\n        })\n        setItemEntryTitle('Add Item')\n        setShowItemForm(true);\n    }\n\n    const closeItemForm = () => {\n        setShowItemForm(false);\n    }\n\n    const editItem = (item) => {\n        setItem(item);\n        setItemEntryTitle('Edit Item');\n        setShowItemForm(true);\n    }\n\n    let itemsArray = [];\n\n    if(selectedCategory === '') {\n        itemsArray = [...items];\n    }\n    else {\n        itemsArray = items.filter(item => item.category === selectedCategory);\n    }\n\n    return (\n        <div>\n            <header>\n                <h1>Resto App</h1>\n            </header>\n            <main>\n                <div className=\"category-container\">\n                    Category <select value={selectedCategory} onChange={selectCategoryOnChangeHandler}>\n                        <option value=\"\">All</option>\n                        {\n                            categories.map((item, index) => {\n                                return <SelectCategory category={item.category} key={index} />\n                            })\n                        }\n                    </select>\n                    <button onClick={showItemFormOnClickHandler}>Add New Item</button>\n                </div>\n                {\n                    showItemForm ? <ItemForm item={item} items={items} categories={categories} itementrytitle={itemEntryTitle} closeItemForm={closeItemForm} />\n                        : ''\n                }\n                <div className=\"container\">\n                    {\n                        itemsArray.length > 0 ?\n                            itemsArray.map( (item, index) => {\n                                return <ItemBox item={item}\n                                                key={index}\n                                                editItem={editItem}\n                                />\n                            })\n                            : <p>No items on this category.</p>\n                    }\n                </div>\n                <div className=\"cart-container\">\n                    <div>\n                        <h2><strong>Cart Total: { totalAmount }</strong></h2>\n                    </div>\n                    {\n                        cart.map( (cartitem, index) => {\n                            return <DisplayCartItems\n                                cartitem={cartitem}\n                                key={index} />\n                        })\n                    }\n                </div>\n            </main>\n            <footer>\n            </footer>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => { // subscribe\n    return {\n        items: state.items,\n        cart: state.cart,\n        categories: state.categories,\n        totalAmount: state.totalAmount,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateCart: (newcartarray) => dispatch ({\n            type: 'UPDATE_CART',\n            payload: newcartarray,\n        }),\n        updateItems: (newitemsarray) => dispatch ({\n            type: 'UPDATE_ITEMS',\n            payload: newitemsarray,\n        }),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {v4 as uuidv4} from \"uuid\";\n\nconst initialState = {\n    items:  [\n        {\n            id: uuidv4(),\n            name: \"Burger\",\n            price: 50,\n            category: \"Food\",\n            image: \"https://image.flaticon.com/icons/svg/1046/1046784.svg\"\n        },\n        {\n            id: uuidv4(),\n            name: \"Pizza\",\n            price: 100,\n            category: \"Food\",\n            image: \"https://image.flaticon.com/icons/svg/1046/1046771.svg\"\n        },\n        {\n            id: uuidv4(),\n            name: \"Fries\",\n            price: 25,\n            category: \"Food\",\n            image: \"https://image.flaticon.com/icons/svg/1046/1046786.svg\"\n        },\n        {\n            id: uuidv4(),\n            name: \"Coffee\",\n            price: 35,\n            category: \"Drinks\",\n            image: \"https://image.flaticon.com/icons/svg/1046/1046785.svg\"\n        },\n        {\n            id: uuidv4(),\n            name: \"Iced Tea\",\n            price: 45,\n            category: \"Drinks\",\n            image: \"https://image.flaticon.com/icons/svg/1046/1046782.svg\"\n        },\n        {\n            id: uuidv4(),\n            name: \"Hot Tea\",\n            price: 45,\n            category: \"Drinks\",\n            image: \"https://image.flaticon.com/icons/svg/1046/1046792.svg\"\n        },\n    ],\n    cart: [],\n    categories: [\n        {\n            category: 'Food'\n        },\n        {\n            category: 'Drinks'\n        },\n        {\n            category: 'Dessert'\n        }\n    ],\n    totalAmount: 0,\n}\n\n\nconst reducer = (state = initialState, action) => {\n\n    const computeCartTotal = (newcart) => {\n        let cartTotal = 0;\n        newcart.forEach(item => {\n            cartTotal+=item.amount;\n        })\n        return cartTotal\n    }\n\n    switch(action.type) {\n        case 'ADD_TO_CART': {\n            let newCartItem = action.payload;\n\n            let cartItems = state.cart.filter(item => item.id === newCartItem.id);\n\n            let newCartArray = [];\n\n            let cartCopy = [...state.cart];\n\n            if(cartItems.length > 0) {\n                newCartArray = cartCopy.map(item => {\n                    if(item.id === newCartItem.id) {\n                        return {\n                            ...item,\n                            qty: item.qty+1,\n                            amount: (item.qty+1) * item.price,\n                        }\n                    }\n                    return item\n                })\n            }\n            else {\n                newCartItem.qty = 1;\n                newCartItem.amount = newCartItem.price;\n\n                newCartArray = [...cartCopy, newCartItem];\n            }\n\n            let newCartTotal = computeCartTotal(newCartArray);\n\n            return {\n                ...state,\n                cart: [...newCartArray],\n                totalAmount: newCartTotal,\n            }\n        }\n        case 'INCREMENT_CART_ITEM': {\n            let cartItem = action.payload;\n\n            let newCartArray = [...state.cart];\n\n            newCartArray = newCartArray.map(item => {\n                if(item.id === cartItem.id) {\n                    return {\n                        ...item,\n                        qty: cartItem.qty + 1,\n                        amount: (cartItem.qty + 1) * cartItem.price,\n                    }\n                }\n                else {\n                    return item;\n                }\n            })\n\n            let newCartTotal = computeCartTotal(newCartArray);\n\n            return {\n                ...state,\n                cart: newCartArray,\n                totalAmount: newCartTotal,\n            }\n        }\n        case 'DECREMENT_CART_ITEM': {\n            let cartItem = action.payload;\n\n            let newCartArray = [...state.cart];\n\n            newCartArray = newCartArray.map(item => {\n                if(item.id === cartItem.id && item.qty > 0) {\n                    return {\n                        ...item,\n                        qty: cartItem.qty - 1,\n                        amount: (cartItem.qty - 1) * cartItem.price,\n                    }\n                }\n                else {\n                    return item;\n                }\n            })\n\n            let newCartTotal = computeCartTotal(newCartArray);\n\n            return {\n                ...state,\n                cart: newCartArray,\n                totalAmount: newCartTotal,\n            }\n        }\n        case 'UPDATE_CART': {\n\n            let newCartTotal = computeCartTotal(action.payload);\n\n            return {\n                ...state,\n                cart: action.payload,\n                totalAmount: newCartTotal,\n            }\n        }\n        case 'ADD_ITEM': {\n            let itemsCopy = [...state.items, action.payload];\n            return {\n                ...state,\n                items: itemsCopy,\n            }\n        }\n        case 'DELETE_ITEM': {\n            let item = action.payload;\n            let itemsCopy = [...state.items];\n            for(let i = 0; i < itemsCopy.length; i++){\n                if (itemsCopy[i].id === item.id) {\n                    itemsCopy.splice(i, 1);\n                }\n            }\n            return {\n                ...state,\n                items: itemsCopy,\n            }\n        }\n        case 'UPDATE_ITEM': {\n            let newitem = action.payload;\n            let itemsCopy = [...state.items];\n\n            itemsCopy = itemsCopy.map(item => {\n                if(item.id === newitem.id) {\n                    return {\n                        ...item,\n                        name: newitem.name,\n                        price: newitem.price,\n                        category: newitem.category,\n                        image: newitem.image,\n                    }\n                }\n                else {\n                    return item;\n                }\n            })\n\n            return {\n                ...state,\n                items: itemsCopy,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}